module clk_divider(
						 input Clk,
						 input run,
						 input enable_irq, 
						 input clear_irq,
						 output reg clk_1Mhz = 0,  
						 output reg irq = 0  
						);
						
	reg [4:0] counter = 25-1;
	reg timeout_occurred = 0;
	
	always@(posedge Clk)
	begin
		if(run)
		begin
			if(!counter)
			begin
				clk_1Mhz <= ~clk_1Mhz;
				counter <= 25-1;
				timeout_occurred <= 1;
			end
			else
			begin
				counter <= counter-1;
			end
		end
		else
			clk_1Mhz <= 0;
			counter <= 25-1;             
         timeout_occurred <= 0;       
	end
	
	always @(posedge Clk) 
	begin
        if (clear_irq) begin
            irq <= 0;             
            timeout_occurred <= 0;      
        end else if (timeout_occurred && enable_irq) 
		  begin
            irq <= 1;            
        end
    end
endmodule
						 